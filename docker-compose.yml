services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    platform: linux/arm64/v8
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - kafka-spark-streaming

  kafka:
    image: bitnami/kafka:3.4
    container_name: kafka
    platform: linux/arm64/v8
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092"
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "host.docker.internal:9092"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - kafka-spark-streaming
    

  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    depends_on:
      - kafka
    command: bin/spark-class org.apache.spark.deploy.master.Master
    environment:
      - SPARK_MODE=master
    ports:
      - "8080:8080"
      - "7077:7077"
    networks:
      - kafka-spark-streaming
    volumes:
      - ./jars/postgresql-42.3.3.jar:/opt/bitnami/spark/jars/postgresql-42.3.3.jar


  spark-worker-1:
    image: bitnami/spark:latest
    container_name: spark-worker-1
    depends_on:
      - spark-master
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    networks:
      - kafka-spark-streaming
    volumes:
     - ./jars/postgresql-42.3.3.jar:/opt/bitnami/spark/jars/postgresql-42.3.3.jar


  kafka-producer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: producer
    depends_on:
      kafka:
        condition: service_healthy
    networks: 
      - kafka-spark-streaming
    environment:
      KAFKA_BROKER: "kafka:9092"

      
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: kafka_streaming
    ports:
      - "5432:5432"
    networks:
      - kafka-spark-streaming
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d


  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    
    networks:
      - kafka-spark-streaming
    depends_on:
      - postgres
    volumes:
      - grafana_data:/var/lib/grafana


volumes:
  postgres_data:
  grafana_data:

networks:
  kafka-spark-streaming:
    driver: bridge
    
